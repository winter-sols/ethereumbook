////
Source: https://github.com/lrettig/ethereumbook/blob/develop/contrib/governance.asciidoc
License: CC0
Added by: @lrettig
////

:toc:

[[governance_chapter]]
== Ethereum governance

Understanding the technological mechanisms by which Ethereum accounts, transactions, and smart
contracts work is important, but equally important is understanding the human mechanisms by which
Ethereum was built and by which it continues to be developed. Ethereum is software, and Ethereum is
data (a ledger), but Ethereum is equally a community and a set of norms and processes governing the
interaction of the people in the community, and the interaction between the people and the system.
This set of norms and processes is Ethereum governance.

[[_anchor_governance_in_general]]
=== Governance in general

It may help to begin by defining governance. Simply put,

[quote]
Governance is the process by which people organize themselves to make decisions.

Note that _governance_ is different from _government_ in several important ways. For one thing,
_government_ implies rigid structures: elections, leaders, political parties, checks and balances.
_Governance,_ on the other hand, applies equally to such forms of rigid, institutionalized systems
of government as it does to more casual, informal systems. As described by Mark Bevir,

[quote]
Governance differs from government in that it focuses less on the state and its institutions and
more on social practices and activities. [1]

Finally, governance focuses less on hierarchies such as states and more on organizational structures
such as markets and networks. [1] Someday, blockchains may become so mature and institutionalized
that we begin to refer to their organizing norms and processes as _government._ For now, however,
_governance_ is the more appropriate term.

Governance, on and off the blockchain, can take many forms. It may be based on the authority of a
single person (monarchy), of one or more deities (theology), of experts (technocracy), of the people
(democracy), of common ownership (socialism), or of money (plutarchy). While blockchain is a radical
new technology which enables new forms of governance (which we'll discuss in a moment), ultimately
blockchain governance is still old-fashioned governance: it's still people coming together and
putting in place norms and processes by which decisions will be made and carried out.

==== An aside on the use of terminology

The ideas, terminology, and frameworks presented in this section draw from classical fields
including political science, economics, and game theory. However, their usage here may differ from
their formal definitions and usage within those fields. To clasically-trained experts from these
fields: we beg your forgiveness. Blockchain governance and the closely-related concept of
cryptoeconomics are nascent and the ideas are still in the process of being developed.

==== Some helpful terminology

Before going deeper into the topic of governance it may be helpful to lay out some useful
terminology and explain how it will be used throughout this chapter.

 * a *stakeholder* is a party affected by governance.
 * a *participant* is a party able to influence the governance process.
 * *legitimate* governance is governance in which there is common knowledge that the governance
 process will be used rather than abandoned or replaced
 * illegitimate
 * a stakeholder is *enfranchised* when they feel that a governance process produces decisions in
 their best interest.
 * a stakeholder is *disenfranchised* when they feel that a governance process produced decisions
 not in their best interest.
 * formalized, institutionalized
 * informal

Before explaining how blockchain and Ethereum governance function today, let's examine the types of
problems and questions such governance is intended to address. Two frameworks will help us
understand these problems: coordination problems and game theory. We'll begin with coordination
problems.

==== Coordination problems

One interesting way to think about the blockchain is as a coordination problem. A coordination
problem is any problem in which the decisions and strategy of one actor affect those of other
actors, and in which you, as an actor, cannot expect to achieve your desired outcome without
considering the decisions and strategy of the other actors.

Take, for example, the situation where my wife and I are both still at the office and both want to
meet at home and have dinner together.[2] If I head home but she stays at work, I'll be annoyed
because I will have wasted time and I can't work at home. In the same way, if she heads home but I
stay at work, she'll be annoyed. As you can see the outcome, and my utility, depend not only upon my
own actions but also upon her actions.

//// TODO: simple graphic of a coordination game ////

This is a simple, somewhat contrived example, but coordination problems are everywhere, from dating
to business to the job market to the stock market to international relations and wars. Voting is a
great, complex example of a coordination problem.

So are many aspects of the blockchain. Here are a few concrete examples:

* Miners want to maximize the amount of block rewards they receive. Generally, the best way for them
to do this is to mine blocks as quickly as possible and to include as many transactions in each
block as they can. However, they also want to make sure that every transaction that's included in
their block is valid or they will be penalized (i.e., produce an invalid block that receives no
rewards). If a miner receives invalid transactions from one of its peers it may decide to block that
peer so it doesn't waste time executing invalid transactions.

* When I send a transaction, I want it to be included in a block as quickly as possible, but I also
want to minimize the fees (gas price) I pay the miners. If I set the gas price too low, the
transaction won't get mined, but if I set it too high, I'll overpay. The gas price required to
confirm a block quickly depends upon how busy the network is and how much gas other transactions are
paying.

* If I want to double-spend the same funds, I could send ether to another party, then bribe a miner
not to include that transaction in the next block that gets mined. (There are multiple protections
against this sort of behavior in the Ethereum protocol, but choosing whether or not to play by the
rules is a coordination problem.)

There are many, many other examples of coordination problems in Ethereum. Which others can you come
up with?

==== Game theory

Another helpful framework for examining and understanding the problems of blockchain governance is
game theory. Game theory presents a view of the world in which there are _actors_ with _objectives_
playing games that have _rules._ Such a view of the world is admittedly oversimplified and doesn't
necessarily line up with reality, which is far messier, but it is nonetheless a useful framework for
understanding the sort of choices people make, how they make those choices, and how their choices
impact other people and their future choices.

* An *actor* is any entity, human or machine, that has agency and an *objective* it wants to
achieve.
* An *objective* is a goal. In game theory, objectives are measured quantitatively using a *utility
function.*
* A *utility function* is a function that maps the state of the world to a score describing how
desirable that state is, from the perspective of the actor.
* A *game* is a situation involving one or more *actors* governed by a set of *rules.* 
(Don't get overly hung up on the use of the word "game" here. This is game theory speak for
any situation where actors have to make decisions, similar to the coordination problem described
above.)
* A *rule* is logic which all actors in a game must obey. Think of this not as a normative rule
* ("Thou shalt not kill") but rather as a rule in the cold-hard computer logic sense of the word
* ("Every time you pass Go, $200 will appear in your account").

Let's look at a concrete example. Jimmy (an *actor*) really likes to eat cookies, and really
dislikes doing homework. Jimmy's *objective* is to eat as many cookies as he can, and to do as
little homework as he can. His *utility function* therefore looks something like the following:

```
num_cookies_eaten - hours_homework_done
```

Jimmy's parents give him two cookies for every hour of homework he completes (a *rule*), up to a
maximum of six cookies per day (another *rule*). Jimmy's best course of action is therefore to do
three hours of homework and receive the maximum six cookies, resulting in a utility score of 6 - 3 =
3. In terms of game theory, this is the behavior that maximizes his utility in this particular
*game.*

Game theory and coordination problems overlap when one actor's decisions impact, and are impacted
by, the behavior and decisions of other actors as described above. Let's look at one such problem.

The Prisoner's Dilemma is probably the most famous of all problems in game theory. It describes a
scenario in which two (or more) actors who are prisoners, totally unable to communicate with one
another, are given the chance to betray the other prisoner or to remain silent (which is known as
cooperating). If both prisoners cooperate, neither is convicted and both are let off with a light
sentence. If Prisoner A betrays Prisoner B and Prisoner B remains silent, Prisoner A is released and
Prisoner B faces the death penalty (or some other severe penalty). If both prisoners betray, both
are executed.

//// TODO: graphical representation of prisoner's dilemma ////

It's fairly obvious that the best course of action is for all prisoners to choose to cooperate, but
if you think deeply about the problem it's not obvious how they can coordinate their decisions
without being able to communicate with one another.

//// TODO: mention solutions, Nash equilibria ////

Where does game theory apply in Ethereum? Here are some examples.

* Miners want to maximize their compute power (hash rate) in order to maximize the amount of block
rewards they receive, and thus their profit. Since there are economies of scale in compute power,
they will seek to mine with as much compute power as possible. However, they are also cognizant of
the fact that, if they were to exceed (or even approach) the threshold of 50% of total network hash
power and that fact were to become known to the market, the market may lose confidence in Ethereum
and the value of ether may plummet. Miners are therefore incentivized to stay well below this
threshold (and this has happened in practice //// TODO: add link ////.

* In the Casper proof of stake system //// TODO: add link ////, collators and validators are
rewarded for acting honestly: for including all transactions they're aware of in each block, for
voting honestly on which block they believe to be the canonical head of the chain, etc. They are
also severely punished (this is called being "slashed") for acting dishonestly or otherwise
violating the rules of the protocol. Note that this system of incentives works even _outside_ the
Ethereum protocol, so that a validator cannot for instance act maliciously, get slashed within the
protocol, but expect to profit outside the protocol (this is called "extraprotocol incentives") by
e.g. shorting ether. This set of carefully-designed incentives works well to keep all actors in
line.

* In a token curated registry //// TODO: link? ////, tokenholders are incentivized to maximize the
economic value of their own token holdings by carefully vetting applicants to the registry and only
voting to allow qualified applicants.

Those responsible for designing the Ethereum protocol, the set of rules that govern how the system
works and how agents (people and smart contracts) interact with the system, think deeply about game
theory as a way of understanding how to incentivize people to use the system, follow its rules, and
keep the system functioning well. In particular, game theory is useful for analyzing attack vectors.
This is part of the governance of Ethereum, and understanding game theory and coordination problems
is a critical requirement for those who contribute to Ethereum governance.

Of course governance of and by human beings is never as simple as game theory would suggest. Humans
act not only according to objective rules but also to subjective social norms, practices,
conventions, and expectations.

==== Social norms

For this reason, social norms also play an important role in governance. For instance, imagine that
a social convention (an unwritten rule) forms whereby members of a particular legislative body agree
only to meet on Tuesdays and Thursdays. You may show up on Monday, but if you're the only one in the
room, discussion and voting aren't going to happen. [Cite Vlad talk]

It is therefore important that, while considering the cold, rational, economic logic of coordination
problems and game theory, governance also include the human element.

==== Focal points

[[_anchor_blockchain_governance]]
=== Blockchain governance

With these basic concepts in place, let's take a look at how they're used in the governance of
actual blockchains including Ethereum. We begin by considering the actors of the blockchain world:
the various parties and their differing interests and objectives in using the blockchain.

==== Stakeholders

A diverse set of parties interact every day to keep Ethereum and other blockchains functioning. The
entire system would fail, or would at least be far less useful, without any one of these parties. An
important goal of governance is to balance the interests of each group of system users so that one
group is not favored at the expense of another. It is the diversity of this set of stakeholders,
closely resembling nature, which gives rise to the term "ecosystem" when used to describe the
overall system.

Stakeholders in Ethereum include:

* *Core developers:* this group is responsible for writing and maintaining the code that runs on all
Ethereum nodes. They are primarily responsible for fixing bugs, responding to technical issues, and
coordination ongoing upgrades to the Ethereum protocol. Core developers are primarily incentivized
to write good code and ensure that the network is as technically sound as possible.  Note that in
many cases core developers are part of larger organizations, for-profit or non-profit, which are
subject to their own governance and objectives.

* *Miners:* miners are responsible for collecting transactions into a transaction pool, validating
them, organizing them into blocks, and running the proof of work algorithm to produce a new, valid,
sealed block which is then broadcast to the network. They are incentivized to maximize their block
rewards by producing and broadcasting as many valid blocks as possible, so that the money they spend
(out of protocol) on electricity is not wasted. They are also incentivized to increase the overall
network utilization (transactions per second) in order to increase the amount of fees they collect
for mining each block. While selfishly motivated by the protocol to do so they also provide security
to the overall network by increasing the total cumulative proof of work performed on the blockchain,
making it harder for an attacker to stage a 51% attack //// TODO: link
////. (Note that this is subject to change as Ethereum transitions over time from proof of work to
proof of stake //// TODO: link to appropriate section ////.)

* *Mining pool operators:* miners may choose to mine solo or they may opt to join a mining pool,
which efficiently combines the hash power of a large number of smaller miners and distributes
rewards proportionally to the hash power that each individual miner contributes to the pool. Pool
operators typically receive a cut of the overall block rewards received by the pool, but are
incentivized not to set this fee too high by competition from other pool operators: if fees in a
given pool are set too high the miners could switch to another pool. As described above, they are
also incentivized to keep their overall network hash power well below the 50% threshold or they may
cause the market to lose confidence in ether, causing its price (and, therefore, their profits) to
plummet.

* *Dapp developers:* developers of decentralized applications ("Dapps") running on Ethereum are
incentivized to keep fees low and to keep network utilization down so that users of their
application can interact with it cheaply and easily. They also want the Ethereum network to scale so
that it can handle greater load. Note that this puts them at odds with miners, who want higher fees
and fuller blocks. Dapp developers may also want to add extra features to Ethereum to enable a
broader range of applications to be developed and run on the network.

* *Node operators:* people run Ethereum nodes for a variety of reasons. Some want the security and
added trust they get from individually verifying every transaction on the network. Some run full
nodes in order to collect and analyze blockchain data. Yet others may run an Ethereum node in order
to bridge tokens, transactions, or other data to other blockchains or systems. In general node
operators want to reduce the resource requirements--bandwidth, disk space and I/O, CPU
cycles--required to operate a full node. They desire well-functioning, bug-free Ethereum client
software.

* *Investors:* otherwise known as "hodlers," investors hold one or more cryptographic assets, either
the native network token (ether) or ERC-20 tokens. They are motivated primarily by the market price
of such assets, and may additionally be motived by second-order effects such as volatility. They may
be less interested in the technical functioning of the network, except insofar as a well-functioning
network may increase market prices for the assets in question.

* *Users:* this is a general term encompassing those who transact on Ethereum or run dapps. In
general, users prefer a less congested network and lower fees. It's hard to say more than this as
users are motivated to transact on Ethereum for a wide variety of reasons and may have a broad array
of differing needs and objectives in using the system.

There is a broader set of stakeholders that includes parties such as exchanges, hedge funds,
blockchain bridge operators, consultants, governments, etc. that are beyond the scope of this
chapter. Note as well that many users may fall into multiple of the above categories, leading to
potentially far more complex sets of overlapping incentives: I may be both a Dapp developer, in
which case I want network utilization and fees to remain low, but also participate in mining, in
which cases I prefer higher utilization and higher fees.

Again, one of the main goals of Ethereum governance is to balance the interests of this diverse set
of stakeholders and ensure that all feel enfranchised by the governance system (that they have a
voice and that their interests are being represented in the governance system).

==== Vetoes and checks and balances ====

A question often asked by those who are new to the blockchain ecosystem is, "Who is in charge?" Many
people have more experience in various "real world" governance structures such as companies and
governments which tend to be top-down and hierarchical. They often struggle to understand the sort
of decentralized, network-style governance that arises in blockchains simply because this sort of
governance has not been commonly seen before.

The primary structure of blockchain governance is in fact a set of vetoes, otherwise known as "a
system of checks and balances." While no individual party or class of stakeholders has the power to
unilaterally change the blockchain protocol, groups of stakeholders may exercise their veto power to
block changes proposed by other groups. For instance, if a group of users proposes a change that the
core developers disagree with, the core developers may opt not to implement that change. Similarly,
if the core developers implement a change that miners and node operators disagree with, the miners
and node operators may opt not to run node software implementing those changes.

In this way, making changes to the core blockchain protocol is in fact a complex and difficult
coordination problem of the type described above, and changes that are adopted have passed through
many checks and been agreed to be a large, diverse set of stakeholders. Each blockchain community
has a different process to arrive at such consensus. We'll see concrete examples of several such
systems in a moment.

==== Off-chain governance

Most blockchains today, including Bitcoin and Ethereum, are governed primarily through _off-chain_
(otherwise known as "loosely coupled") systems of governance. Off-chain means that the rules of
governance are not written into the core blockchain protocol itself and must instead be dealt with
at the social layer, i.e., humans talking to other humans.

Proponents of off-chain governance feel that all of the above stakeholders have a role in governing
the system and that to move decisions on-chain where, for instance, node software is automatically
upgraded once a change is decided, is to deprive one or more such stakeholders (in this case, node
operators) of their role in the governance process.

===== Case study: Bitcoin

==== On-chain governance

In contrast to those who believe in off-chain governance, proponents of on-chain governance feel
that off-chain governance, as in the case of Bitcoin, is too slow or inefficient.

Challenges: plutocracy, susceptibility to exploits

===== Case study: Tezos

Governance of each blockchain is different and, just as each blockchain is a "mini economy" with its
own monetary and fiscal policy, each blockchain is also a mini system of governance. Time will tell
which systems succeed, become popular, and increase in value, and which ones fail.

==== Community and consensus

==== The power of the fork

=== Ethereum governance today

==== Stakeholders

==== Process

==== EIPs

==== All core devs

==== The roadmap

==== Forks

===== Contentious forks

==== Difficulty bomb

=== The future of Ethereum governance

[[references_sec]]
=== References

[1] Governance: A Very Short Introduction, Mark Bevir, Oxford University Press, 2012 +
[2] https://www.lesswrong.com/posts/yJfBzcDL9fBHJfZ6P/nash-equilibria-and-schelling-points
